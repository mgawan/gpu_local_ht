the extend contig functions takes in all the data and then for each sequence of contig (inside a for loop)
it performs an iterative walk to right side and then iterative walk to left, appends and prepends the walks
to original contig and exits.

Plan:
-> Plan is to write a kernel for iterative walks, then call it for right walks first and then left walks. Total
threads (block_size*grid_size) equal to total contigs, then each thread does a contig.
-> I have placed all the right reads in a separate array and left ones in separate, I have separate offset arrays
for each. Each element is starting index of a read, to get the right reads for a contig, find index for contig.
which will be same as the index of contig in its array i.e. 0 contig has 0 index. Use this index to index the count
array which will give you the summation of all the right read counts uptill now, to obtain your count, subtract count
of contig before yours from current i.e. for contig 3, get count at index 3 and then subctact count from index 2 from
this. Now sweep through the right_reads array, start location of your first right read would be offset_right[count_sum_r[contig_id]+i]
where i is starting from zero and goes uptill total count of reads for this contig. 
-> repeat the same for left reads